(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/hcvst/dev/web2py/applications/openid/views/appadmin.html'
p4
sS'code'
p5
S'response.write(\'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\\n<head>\\n<meta http-equiv="content-type" content="text/html; charset=utf-8" />\\n<meta name="author" lang="en" content="\',escape=False)\nresponse.write(response.author)\nresponse.write(\'" />\\n<meta name="keywords" content="\',escape=False)\nresponse.write(response.keywords)\nresponse.write(\'" />\\n<meta name="description" content="\',escape=False)\nresponse.write(response.description)\nresponse.write(\'" />\\n<title>\',escape=False)\nresponse.write(response.title or URL(r=request))\nresponse.write(\'</title>\\n<link rel="stylesheet" media="screen,projection" type="text/css" href="\',escape=False)\nresponse.write(URL(r=request,c=\'static\',f=\'styles.css\'))\nresponse.write(\'" />\\n\',escape=False)\nimport os\nresponse.write(\'\\n<link href="\',escape=False)\nresponse.write(URL(r=request,c=\'static\',f=\'calendar.css\'))\nresponse.write(\'" rel="stylesheet" type="text/css" media="screen" charset="utf-8" />\\n<script src="\',escape=False)\nresponse.write(URL(r=request,c=\'static\',f=\'jquery.js\'))\nresponse.write(\'" type="text/javascript"></script>\\n<script src="\',escape=False)\nresponse.write(URL(r=request,c=\'static\',f=\'calendar.js\'))\nresponse.write(\'" type="text/javascript" charset="utf-8"></script>\\n<script type="text/javascript"><!--\\nfunction popup(url) {\\n  newwindow=window.open(url,\\\'name\\\',\\\'height=400,width=600\\\');\\n  if (window.focus) newwindow.focus();\\n  return false;\\n}\\nfunction collapse(id) { $(\\\'#\\\'+id).slideToggle(); }\\nfunction fade(id,value) { if(value>0) $(\\\'#\\\'+id).hide().fadeIn(\\\'slow\\\'); else $(\\\'#\\\'+id).show().fadeOut(\\\'slow\\\'); }\\nfunction ajax(u,s,t) {\\n  var query="";\\n  for(i=0; i<s.length; i++) { \\n     if(i>0) query=query+"&";\\n     query=query+encodeURIComponent(s[i])+"="+encodeURIComponent(document.getElementById(s[i]).value);\\n  }\\n  $.ajax({type: "POST", url: u, data: query, success: function(msg) { document.getElementById(t).innerHTML=msg; } });  \\n}\\nString.prototype.reverse = function () { return this.split(\\\'\\\').reverse().join(\\\'\\\');};\\n$(document).ready(function() {\\n$(\\\'.hidden\\\').hide();\\n$(\\\'.error\\\').hide().slideDown(\\\'slow\\\');\\n$(\\\'.flash\\\').hide().slideDown(\\\'slow\\\')\\n$(\\\'.flash\\\').click(function() { $(this).fadeOut(\\\'slow\\\'); return false; });\\n//hc$(\\\'input.string\\\').attr(\\\'size\\\',50);\\n//hc$(\\\'textarea.text\\\').attr(\\\'cols\\\',50).attr(\\\'rows\\\',10);\\n$(\\\'input.integer\\\').keyup(function(){this.value=this.value.reverse().replace(/[^0-9\\\\-]|\\\\-(?=.)/g,\\\'\\\').reverse();});\\n$(\\\'input.double\\\').keyup(function(){this.value=this.value.reverse().replace(/[^0-9\\\\-\\\\.]|[\\\\-](?=.)|[\\\\.](?=[0-9]*[\\\\.])/g,\\\'\\\').reverse();});\\n$(\\\'input.delete\\\').attr(\\\'onclick\\\',\\\'if(this.checked) if(!confirm("\',escape=False)\nresponse.write(T(\'Sure you want to delete this object?\'))\nresponse.write(\'")) this.checked=false;\\\');\\ntry {$("input.date").focus( function() {Calendar.setup({\\n     inputField:this.id, ifFormat:"\',escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'", showsTime:false\\n}); }); } catch(e) {};\\ntry { $("input.datetime").focus( function() {Calendar.setup({\\n     inputField:this.id, ifFormat:"\',escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'", showsTime: true,timeFormat: "24"\\n}); }); } catch(e) {};\\ntry { $("input.time").clockpick({\\n     starthour:0, endhour:23, showminutes:true, military:true\\n}); } catch(e) {};\\n});\\n//--></script>\\n\\n</head>\\n<body>\\n<div id="header">\\n <div id="header_inner" class="fixed">\\n   <div id="logo">\\n     <h1><a href="http://www.web2py.com">[web2py<sup style="font-size:0.5em;">TM</sup>]</a></h1>\\n     <h2>\',escape=False)\nresponse.write(request.application)\nresponse.write(\'</h2>\\n   </div>\\n   \',escape=False)\nif response.menu is not None:\n    response.write(\'\\n   <div id="menu">\\n   <ul>\\n    \',escape=False)\n    for _name, _link in response.menu:\n        response.write(\'\\n     <li><a href="\',escape=False)\n        response.write(_link)\n        response.write(\'" onmouseover="this.ccc=this.style.backgroundColor;this.style.backgroundColor=\\\'white\\\';" onmouseout="this.style.backgroundColor=this.ccc;" \',escape=False)\n        if not _active:\n            response.write(\'class="inactive"\',escape=False)\n            pass\n        response.write(\'>\',escape=False)\n        response.write(_name)\n        response.write(\'</a></li>\\n     \',escape=False)\n        pass\n    response.write(\'\\n   </ul>\\n   </div>\\n   \',escape=False)\n    pass\nresponse.write(\'\\n  </div>\\n</div>\\n<div id="main">\\n  <div id="main_inner" class="fixed">\\n    <div id="primaryContent_columnless">\\n      <div id="columnA_columnless">\\n        \',escape=False)\nif response.flash:\n    response.write(\'\\n        <div class="flash">\',escape=False)\n    response.write(response.flash)\n    response.write(\'</div>\\n        \',escape=False)\n    pass\nresponse.write(\'\\n        \\n<script><!--\\n$(document).ready(function(){\\n  $("table.sortable tbody tr").mouseover( function() {\\n     $(this).addClass("highlight"); }).mouseout( function() { \\n     $(this).removeClass("highlight"); });\\n  $(\\\'table.sortable tbody tr:odd\\\').addClass(\\\'odd\\\');\\n  $(\\\'table.sortable tbody tr:even\\\').addClass(\\\'even\\\');\\n\\n});\\n//--></script>\\n\\n\',escape=False)\nif request.function==\'index\':\n    response.write(\'\\n  <h1>Available databases and tables</h1>\\n  \',escape=False)\n    if not databases:\n        response.write(\'No databases in this application\',escape=False)\n        pass\n    response.write(\'\\n  \',escape=False)\n    for db in sorted(databases):\n        response.write(\'\\n    \',escape=False)\n        for table in databases[db].tables:\n            response.write(\'\\n      <h2>\',escape=False)\n            response.write(A("%s.%s"%(db,table),_href=URL(r=request,f=\'select\',args=[db],vars=dict(query=\'%s.%s.id>0\'%(db,table)))))\n            response.write(\'</h2>\\n      [ \',escape=False)\n            response.write(A(\'insert new \'+table,_href=URL(r=request,f=\'insert\',args=[db,table])))\n            response.write(\' ]\\n    <br /><br />\\n    \',escape=False)\n            pass\n        response.write(\'\\n  \',escape=False)\n        pass\n    response.write(\'\\n\\n\\n\',escape=False)\nelif request.function==\'select\':\n    response.write(\'\\n  <h1>database \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\' select\\n  </h1>\\n   \',escape=False)\n    if table:\n        response.write(\'\\n  [ \',escape=False)\n        response.write(A(\'insert new %s\'%table,_href=URL(r=request,f=\'insert\',args=[request.args[0],table])))\n        response.write(\' ]<br/><br/>\\n    <h2>Rows in table</h2><br/>\\n   \',escape=False)\n    else:\n        response.write(\'\\n    <h2>Rows selected</h2><br/>\\n   \',escape=False)\n        pass\n    response.write(\'\\n   \',escape=False)\n    response.write(form)\n    response.write(\'\\n   <p>The "query" is a condition like "db.table1.field1==\\\'value\\\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.<br/>\\n      Use (...)&amp;(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.<br/>\\n      "update" is an optional expression like "field1=\\\'newvalue\\\'". You cannot update or delete the results of a JOIN</p>\\n    <br/><br/>\\n    <h3>\',escape=False)\n    response.write(nrows)\n    response.write(\' selected</h3>\\n    \',escape=False)\n    if start>0:\n        response.write(\'[ \',escape=False)\n        response.write(A(\'previous 100 rows\',_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(start=start-100))))\n        response.write(\' ]\',escape=False)\n        pass\n    response.write(\'\\n    \',escape=False)\n    if stop<nrows:\n        response.write(\'[ \',escape=False)\n        response.write(A(\'next 100 rows\',_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(start=start+100))))\n        response.write(\' ]\',escape=False)\n        pass\n    response.write(\'    \\n    \',escape=False)\n    if rows:\n        response.write(\'\\n       <div style="overflow: auto;" width="80%">\\n       \',escape=False)\n        linkto=URL(r=request,f=\'update\',args=request.args[0])\n        response.write(\'\\n       \',escape=False)\n        upload=URL(r=request,f=\'download\',args=request.args[0])\n        response.write(\'    \\n       \',escape=False)\n        response.write(SQLTABLE(rows,linkto,upload,orderby=True,_class=\'sortable\'))\n        response.write(\'\\n       </div>\\n    \',escape=False)\n        pass\n    response.write(\'\\n    <br/><br/><h2>Import/Export</h2><br/>\\n    [ <a href="\',escape=False)\n    response.write(URL(r=request,f=\'csv\',args=request.args[0],vars=dict(query=query)))\n    response.write(\'">export as csv file</a> ]\\n  \',escape=False)\n    if table:\n        response.write(\'\\n    \',escape=False)\n        response.write(FORM(\'or import from csv file \',INPUT(_type=\'file\',_name=\'csvfile\'),INPUT(_type=\'hidden\',_value=table,_name=\'table\'),INPUT(_type=\'submit\',_value=\'import\')))\n        response.write(\'\\n  \',escape=False)\n        pass\n    response.write(\'\\n\\n\',escape=False)\nelif request.function==\'insert\':\n    response.write(\'  \\n  <h1>database \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\'\\n    table \',escape=False)\n    response.write(A(request.args[1],_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n    response.write(\'\\n  </h1>\\n  <h2>New Record</h2><br/>\\n  \',escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\\n\\n\',escape=False)\nelif request.function==\'update\':\n    response.write(\'\\n  <h1>database \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\'\\n    table \',escape=False)\n    response.write(A(request.args[1],_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n    response.write(\'\\n    record id \',escape=False)\n    response.write(A(request.args[2],_href=URL(r=request,f=\'update\',args=request.args[:3])))\n    response.write(\'\\n  </h1>\\n  <h2>Edit current record</h2><br/><br/>\',escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\\n\\n\',escape=False)\nelif request.function==\'state\':\n    response.write(\'\\n  <h1>Internal State</h1>\\n  <h2>Current request</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(request))\n    response.write(\'\\n  <br/><h2>Current response</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(response))\n    response.write(\'\\n  <br/><h2>Current session</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(session))\n    response.write(\'\\n\',escape=False)\n    pass\nresponse.write(\'\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div id="footer" class="fixed">\\n   Powered by <a href="http://www.web2py.com">web2py</a> (TM) created by Massimo Di Pierro &copy; 2007, 2008, 2009\\n</div>\\n</body>\\n</html>\\n\',escape=False)'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/hcvst/dev/web2py/gluon/restricted.py", line 176, in restricted\n    exec ccode in environment\n  File "/home/hcvst/dev/web2py/applications/openid/views/appadmin.html", line 30, in <module>\n    <h2>Rows in table</h2><br/>\nValueError: too many values to unpack\n'
p8
s.