(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/hcvst/dev/web2py/applications/openid/controllers/auth.py'
p4
sS'code'
p5
S'# This controller handles login etc. in user() and\n# authorisation for data transfer to the relaying party in data()\n\ndef user():\n    views = {\'login\':dict(title=\'Please login\', text=\'\', dialogView=True),\n             \'register\':dict(title=\'Register an openID\', text=\'Sing up for your free openID. All fields up to and including password are required.\' dialogView=True),\n             \'profile\':dict(title=\'Your openID profile\', text=\'Update your profile using the form below. Please not that changing your nickname will not change your openid.\')\n            }\n    view = views.get(request.args[0], dict(title=\'\', text=\'\'))\n    view[\'form\'] = auth()\n    return view\n\n\ndef data():\n    from openid.extensions.sreg import SRegRequest\n    orequest = session.oid_orequest\n    auth_user = auth.user.oid_name\n    oid_user = orequest.identity.split(\'/\').pop().lower()\n    \n    if not orequest:\n        return \'ERROR: This URL can only be accessed as part of a valid openID authentication request.\'\n    elif not session.oid_user_owns_id:\n        body = """You are trying to authenticate as <strong>%s</strong> but you are logged \n                  in as <strong>%s</strong>.""" % (oid_user, auth_user)\n        body += "Please either log off and login as %s or cancel this authentication request." % oid_user\n        resp = dict(body=body)\n    else:\n        body = "You are about to log in to %s as %s." % (orequest.trust_root, auth_user)\n        sreg_req = SRegRequest.fromOpenIDRequest(orequest)\n        if sreg_req.wereFieldsRequested():\n            body += \'<br />In addition the site has requested the following information.\'\n            if sreg_req.required:\n                body += \'<h2>Required information</h2>\'\n                for r in sreg_req.required:\n                    body += r.capitalize()\n            if sreg_req.optional:\n                body += \'<h2>Optional information</h2>\'\n                for o in sreg_req.optional:\n                    body += o.capitalize()\n            if sreg_req.policy_url:\n                body += "The site\'s data usage policy can be found here: <a href=\'%(url)s\'>%(url)s</a>" % {"url":sreg_req.policy_url}\n            else:\n                body += """This site did not include a link to their data usage policy. \n                           This might be a bad thing. If you are the site-admin please\n                           consider adding one."""\n                    \n        resp = dict(body=body)\n    return resp\n    if request.args:\n        mode = request.args[0]\n        if mode == \'once\':\n            session.trust_root_once = session.trust_root\n        elif mode == \'trust\':\n            query = (db.oid_trust.auth_user == auth.user.id) & (db.oid_trust.trust_root == session.trust_root)\n            assert db(query).count() == 0\n            db.oid_trust.insert(auth_user = auth.user, trust_root = session.trust_root)\n        elif mode == \'cancel\':\n            session.cancel = True\n        return redirect(session.oid_url)\n    else: return """\nGrant access to data?<br/>\n<a href="%s">Yes once</a> |<a href="%s">Yes always</a> |<a href="%s">No, cancel</a> \n""" % (URL(r=request,args=[\'once\']),URL(r=request,args=[\'trust\']),URL(r=request,args=[\'cancel\']))\n\ndef submit():\n    pass\n\n\nresponse._vars=response._caller(user)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/hcvst/dev/web2py/gluon/restricted.py", line 97, in restricted\n    ccode = compile(code.replace(\'\\r\\n\', \'\\n\'), layer, \'exec\')\n  File "/home/hcvst/dev/web2py/applications/openid/controllers/auth.py", line 6\n    \'register\':dict(title=\'Register an openID\', text=\'Sing up for your free openID. All fields up to and including password are required.\' dialogView=True),\n                                                                                                                                                    ^\nSyntaxError: invalid syntax\n'
p8
s.